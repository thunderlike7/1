/* Evaluation of Suffix expression*/
#include <stdio.h>
#include <ctype.h> 
#include<math.h>
char stack[100]; 
int top = -1;
void push(char x) 
{
stack[++top] = x; 
} 
char pop( ) 
{
if(top == -1)
return -1;
else
return stack[top--]; 
}
int main()
{
char postfix[20], *p;
int n1,n2,n3,num;
printf("Enter the postfix expression: ");
scanf("%s",postfix);
p = postfix;
while(*p != '\0')
{
if(isdigit(*p))
{
num=(*p-48);
push(num);
}
else
{
n1 = pop();
n2 = pop();
switch(*p)
{
 case '+': n3 = n2 + n1;
 break;
 case '-': n3 = n2 - n1;
 break;
 case '*': n3 = n2 * n1;
 break;
 case '/': n3 = n2 / n1;
 break;
 case '^': n3 = pow(n2,n1);
 break;
 case '%': n3 = n2%n1;
 break;
 }
 push(n3);
}
 p++;
 }
 printf("\nThe result = %d",pop());
}
/* Tower of Hanoi */
#include<stdio.h>
#include<math.h>
void tower(int n, char S, char T, char D)
{
 if(n==0)
 return;
tower(n-1,S,D,T);
printf("\n Move disc %d from %c to %c",n,S,D);
tower(n-1,T,S,D);
}
void main()
{
 int n;
 printf("Enter the number of Discs: ");
 scanf("%d",&n);
 tower(n,'A','B','C');
 printf("\n Total number of Moves=%d",(int)pow(2,n)-1);
}
